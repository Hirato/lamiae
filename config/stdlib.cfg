// binds a key so that it will toggle a variable
// i.e. bindvar 9 thirdperson

togglevar = [
	local on off
	if (<= $numargs 1) [ off = 0 ] [ on = $arg2 ]
	if (<= $numargs 2) [ on = 1 ] [ on = $arg3 ]
	updateval $arg1 (? (= $$arg1 $off) $on $off)
	if (>= $numargs 4) [ echo (format "%1: %2" $arg4 (? (= $$arg1 $off) "^f0on" "^f2off")) ]
]

quine = [ echo (format "quine = [%1]" $quine) ]

//val, min, max
clamp = [ minf (maxf $$arg1 $arg2) $arg3 ]

// Enumerates a list of items sequentially
// args offset, items
// eg enum 1 [ one two three ] will define 3 aliases, one, two and three respectively with the values, 1, 2 and 3
enum = [
	loop i (listlen $arg2) [
		alias (at $arg2 $i) (+ $arg1 $i)
	]
]

// Like the above, but it increased it by powers of two starting at 1 as opposed to 0
// The last item in teh list is given a special value, that lets you mask out all values in the enumeration
// args offset, items
// for example enumpow2 2 [four eight sixteen thirtyone] will define 4 aliases with the respective values of 4, 8, 16 and 28
enumpow2 = [
	loop i (listlen $arg2) [
		local last
		last = (= (+ $i 1) @(listlen $arg2))
		alias (at $arg2 $i) (? $last (<< (- (<< 1 $i) 1) $arg1) (<< 1 $arg1 $i))
	]
]
