// The following local variables will need to be declared per critter entity to use
// this system. You can just copy/paste these lines into their critter.cfg

// r_local_set config experience 0
// r_local_set config level 1
// r_local_set config statpoints 0
// r_local_set config skillpoints 0
// r_local_set config xpvalue -1

// In addition, their scripts will need to load "includes/critter common"
// for XP gain/normalisation/levelup logic.
// The script will also set the spawn signal to set any of the above variables
// you might have forgotten.


// These are helpers for a standard experience system; you do quests, you kill
// things, and you gain levels which grant you stat/skill points, and you spend
// these.
// This works by giving all NPCs a script that gives their killer experience upon
// their death, this is set by the xpvalue local variable, a value of -1 means a
// fallback of level * 25 will be used. Overwriting the script means their deaths
// have no EXP value
// The player doesn't require any scripts, for this system.
// r_givexp will call his "level" signal when he levels up,
// which does nothing more than tell the player that he has points to spend.
//
// These helpers do not scale the gained exp by your level, and leveling up does
// not reset your amount of experience, meaning that when you reach level 2 at
// 1000xp, you'll need to gain 2000xp for level 3, not 3000xp.
//
// No level cap is defined either



// Standard XP progression formula
// 1: 1000 needed to reach...
// 2: 3000 ---
// 3: 6000 ---
// 4: 10000 ---
// etc

r_neededexp = [
	* $arg1 (+ $arg1 1) 500
]

r_get_neededexp = [
	r_neededexp (r_local_get $arg1 level)
]

r_givexp = [
	if (= (r_reftype $arg1) $REF_CHAR) [
		r_local_set $arg1 experience (+ (r_local_get $arg1 experience) $arg2)

		// LEVEL UP!
		local lvl
		lvl = (r_local_get $arg1 level)
		while [>= (r_local_get $arg1 experience) (r_get_neededexp $arg1)] [
			r_local_set $arg1 level (+ (r_local_get $arg1 level) 1)

			r_local_set $arg1 statpoints (+ (r_local_get $arg1 statpoints) 1)
			r_local_set $arg1 skillpoints (+ (r_local_get $arg1 skillpoints) 10)
		]

		if (!= $lvl (r_local_get $arg1 level)) [
			r_signal "level" $arg1 $arg1 1
		]
	]
]

//NOTE We get the commands from rpg/ui.cfg
//raises STAT_* by 1
r_invest_attr = [
	r_select_char $arg1 [
		local stat; stat = (at $lstats $arg2)

		if (&& (!=s $stat "") [< $[r_char_base_@[stat]] 100] [> (r_local_get $arg1 statpoints) 0])  [
			[r_char_base_@[stat]] (+ $[r_char_base_@[stat]] 1)
			r_local_set $arg1 statpoints (- (r_local_get $arg1 statpoints) 1)
		]
	]
]

//NOTE We get the commands from rpg/ui.cfg
//raises SKILL_* by 1
r_invest_skill = [
	r_select_char $arg1 [
		local skill; skill = (at $lskills $arg2)

		if (&& (!=s $skill "") [< $[r_char_base_@[skill]] 100] [> (r_local_get $arg1 skillpoints) 0])  [
			[r_char_base_@[skill]] (+ $[r_char_base_@[skill]] 1)
			r_local_set $arg1 skillpoints (- (r_local_get $arg1 skillpoints) 1)
		]
	]
]
