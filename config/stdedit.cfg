
// implements some editing commands

//blendpaintmode
paintmodes = ["off" "replace" "dig" "fill" "inverted dig" "inverted fill"]

outlinecolours = [
"0x000000" "0xFFFFFF"
"0xFF0000" "0x00FF00" "0x0000FF"
"0xFFFF00" "0xFF00FF" "0x00FFFF"
"0xFF7F00" "0xFF007F" "0x7FFF00" "0x00FF7F" "0x7F00FF" "0x007FFF"
"0xFF7F7F" "0x7FFF7F" "0x7F7FFF"
]

changeoutline = [
	local idx len outlinecolour1 outlinecolour2 outlinecolour3
	idx = (+ (max (listfind c $outlinecolours [= $c $outlinecolour]) 0) $arg1)
	len = (listlen $outlinecolours)

	//normalise index
	if (> $idx $len) [ idx = (mod $idx $len) ]
	while [ < $idx 0 ] [ idx = (+ $idx $len) ]

	outline 1 //always force on
	outlinecolour (at $outlinecolours $idx)
	splitcolour outlinecolour
	echo (format "Outline Colour: ^f3%1 ^f0%2 ^f1%3" $outlinecolour1 $outlinecolour2 $outlinecolour3)
]

//////// Entity Editing ///////////////

=enttype = [
	|| [strcmp * $arg1] [strcmp (enttype) $arg1]
]

=entattr = [
	|| [strcmp * $arg2] [= (entattr $arg1) $arg2]
]

// clear ents of given type
clearents = [
	if $editing [
		entcancel
		entselect [ =enttype $arg1 ];
		echo Deleted (enthavesel) $arg1 entities;
		delent
	]
]

// replace all ents that match current selection
// with the values given
replaceents = [
	if $editing [
		entfind @(entget)
		entset @(loopconcat i $numargs [result $[arg@(+ $i 1)]])
		echo Replaced (enthavesel) entities
	]
]

selentedit      = [ saycommand ( concatword "/entset " (entget) ) ]
selreplaceents  = [ saycommand ( concatword "/replaceents " (entget) ) ]
selentfindall   = [ do [ entfind @(entget) ] ]

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entproperty = [
	entloop [
		entattr $arg1 (+ (entattr $arg1) $arg2)
	]
]

enttypelist = [light mapmodel playerstart envmap particles sound spotlight]

enttypeselect = [
	enttypelength = (listlen $enttypelist)
	next = (mod (+ (indexof $enttypelist (enttype)) $arg1) $enttypelength)
	if (< $next 0) [ next = (+ $next $enttypelength) ]
	do [entset @(listsplice (entget) (at $enttypelist $next) 0 1)]
]

////// Entity primary actions /////////

ent_action_mapmodel       = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_spotlight      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_light          = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_playerstart    = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_envmap         = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_particles      = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_sound          = [ entproperty 0 ( * $arg1 1 ) ]


//////// Copy and Paste //////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

cancelpaste = 0
opaquepaste = 1
entbuffer = ""
entbufferextra = ""
copyflags = 0
entscopied = 0

entreplace = [
	do [
		entset @entbuffer
		if $entbufferextra [
			spawnname $entbufferextra
		]
	]
]

editcopy = [
	copyflags = 0
	if (havesel) [
		copyflags = (| $copyflags 1)
		copy
	]
	if (enthavesel) [
		entscopied = (enthavesel)
		entbuffer = (entget)
		entbufferextra = (entgetinfo)
		copyflags = (| $copyflags 2)
		entcopy
	]
]

editpaste = [
	if (& $copyflags 1) [
		pastehilite
		reorient // temp; real fix will be in octaedit
	]
	onrelease [
		if (& $copyflags 1) [
			if $opaquepaste [ delcube ]
			paste
		]
		if (& $copyflags 2) [
			if (enthavesel) [
				entreplace
			] [
				if (= $entscopied 1) [
					newent light
					entset @entbuffer //because certain entities like mapmodels insert their yaws
					if $entbufferextra [
						spawnname $entbufferextra
					]
				] [
					entpaste
				]
			]
		]
		if $cancelpaste [ cancelsel ]
	]
]

/////// Selection ///////////////

// select ents with given properties
// '*' is wildcard
entfind = [
	if (= $numargs 0) [
		entselect 1
	] [
		entselect (concat [ && [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
			result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
		]))
	]
]

entfindinsel = [
	if (= $numargs 0) [
		entselect [ insel ]
	] [
		entselect (concat [ && [insel] [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
			result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
		]))
	]
]


selindex = [entselect [(= (entindex) $arg1)]]

lse = [
	line = ""
	count = 0
	entloop [
		line  = ( concatword $line (entget) "		" )
		count = ( + $count 1 )
		if (> $count 4) [
		echo $line
		line = ""
		count = 0
		]
	]
	if (> $count 0 ) [ echo $line ]
	echo (enthavesel) entities selected
]

grabbing = 0

drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0 ] ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entmoving 1; onrelease [entmoving 0]; result $entmoving ]
editdrag   = [ cancelsel; || [entdrag] [ drag ] ]
selcorners = [ if $hmapedit [ hmapselect ] [ cancelsel; || [entdrag] [ corners ] ] ]
editextend = [ || [entdrag] [ selextend; reorient; editmove ] ]

editmovewith    = [
	if (havesel) [
		|| [editmove] [ @arg1 ]
		onrelease [ moving 0; dragging 0 ]
	] [
		@arg1
	]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [
	if (|| [havesel] [! (enthavesel)] ) [
		if $moving [
			pushsel $arg1
		] [
			entcancel
			editface $arg1 $arg2
		]
	] [
		if $entmoving [ entpush $arg1 ] [ ent_action_@(enttype) $arg1 ]
	]
]

entswithdirection = "playerstart"
uberdirectionents = "mapmodel"

entdirection = [
	if ( && [enthavesel] [ = (havesel) 0 ] ) [
		entloop [
			cond [ && (>= $entorient 0) [>= (indexof $uberdirectionents (enttype)) 0]] [
				local mul prop
				mul = (? (& $entorient 1) -1 1)
				prop = (- 3 (div $entorient 2))

				entattr $prop (mod (+ (entattr $prop) 360 (* $mul (* $arg1 $arg2))) 360)
			] [ >= (indexof $uberdirectionents (enttype)) 0 ] [
				entattr 1 (mod (+ (entattr 1) 360 (* $arg1 $arg2)) 360)
				//TODO: Binds for other axis
// 				entattr (+ 1 $arg3) (mod (+ (entattr (+ 1 $arg3)) 360 (* $arg1 $arg2)) 360)
			] [ >= (indexof $entswithdirection (enttype)) 0 ] [
				entattr 0 (mod (+ (entattr 0) 360 (* $arg1 $arg2)) 360)
			]
		]
		result 1
	] [
		result 0
	]
]

editdel    = [ delcube; delent ]
editflip   = [ flip; entflip ]

editrotate = [
	|| [ entdirection $arg1 15 ] [
		rotate $arg1
		entrotate $arg1
	]
]

editcut    = [
	if (moving 1) [
		if (= $moving 1) [selsave]
		onrelease [
			moving 0
			if (selmoved) [
				selswap
				copy; entcopy
				delcube; delent
				selrestore
				paste; entpaste
			]
		]
	]
]

passthrough = [
	passthroughsel $arg1;
	if $arg1 [
		passthroughcube_bak = $passthroughcube
		passthroughcube 1
	] [
		passthroughcube $passthroughcube_bak
	]
	entcancel
	if $setting_entediting [ entediting ( ! $arg1 ) ]
]

parts = ["flame + smoke" "flame" "smoke plume" smoke fountain fireball bar "versus bar" text  flare lightning fire smoke water snow leaves]

genenthudmapmodel = [
	if (< (entattr 0) 0) [entname = "invisible"] [
		if (strcmp (mapmodelname (entattr 0)) "") [ entname = "^f3Invalid!" ] [
			entname = (mapmodelname (entattr 0))
		]
	]
	format "model: ^fs^f2%1^fr" $entname
]

genenthudparticles = [
	if (&& (>= (entattr 0) 0) (<= (entattr 0) 15)) [
		entname = (at $parts (entattr 0))
	] [
		if (&& (> (entattr 0) 31) (< (entattr 0) 36)) [
			entname = "lensflare"
		] [
			entname = "unknown"
		]
	]

	if (|| (&& (>= (entattr 0) 0) (<= (entattr 0) 3)) (&& (>= (entattr 0) 9) (<= (entattr 0) 15))) [
		splitcolour col (entattr 3)
		format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname $col1 $col2 $col3
	] [
		if (&& (>= (entattr 0) 5) (<= (entattr 0) 8)) [
			splitcolour col (entattr 2)
			format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname $col1 $col2 $col3
		] [
			if (&& (> (entattr 0) 31) (< (entattr 0) 36)) [
				format "%1 particles; RGB: ^f3%2 ^f0%3 ^f1%4" $entname (entattr 1) (entattr 2) (entattr 3)
			] [
				format "%1 particles" $entname
			]
		]
	]
]

genenthudplayerstart = [
	concat "Yaw:" (entattr 0)
]

genenthudlight = [
	if (<= (entattr 0) 0) [
		entname = "Off"
	] [
		entname =  (entattr 0)
	]
	format "Radius ^fs^f2%1^fr : ^f3%2 ^f0%3 ^f1%4^fr" (? (<= (entattr 0) 0) "Off" (entattr 0)) (entattr 1) (entattr 2) (entattr 3)
]

genenthudsound = [
	if (< (entattr 0) 0) [
		entname = "^f3Invalid!"
	] [
		if (strcmp (entsoundname (entattr 0)) "") [
			entname = "^f3Unregistered index"
		] [
			entname = (entsoundname (entattr 0))
		]
	]
	format "soundfile: ^fs^f2%1^fr" $entname
]

genenthudspotlight = [
	format "angle: ^fs^f2%1^fr" (min 89 (max 0 (entattr 0)))
]

genenthudenvmap = [
	radius = (entattr 0)
	if (! $radius) [radius = $envmapradius]
	format "radius: ^fs^f2%1^fr" $radius
]

genenthud = [
	if (strcmp (getalias (concatword "genenthud" (enttype))) "") [
		result "No Information"
	] [
		result ((concatword "genenthud" (enttype)))
	]
]

edithud = [
	cond [!= $hmapedit 0] [
		format "gridsize: ^fs^f2%3^fr worldsize: ^fs^f2%4^fr^nheightbrush no. ^fs^f2%1^fr : ^fs^f2%2^fr" $hbrushindex $hbrushname $gridpower $mapscale
	] [!= $blendpaintmode 0] [
		format "paintmode ^fs^f2%1^fr: ^fs^f2%2^fr^nbrush no. ^fs^f2%3:^fr ^fs^f2%4^fr" $blendpaintmode (at $paintmodes $blendpaintmode) (curblendbrush) (getblendbrushname (curblendbrush))
	] [enthavesel] [
		concatword (entget) " : ^fs^f2" (enthavesel) "^fr selected^n" (genenthud)
	] [|| (strcmp (gettexname (getseltex) 0) (gettexname 0 0)) (strcmp (getseltex) "")] [
		format "gridsize: ^fs^f2%1^fr worldsize: ^fs^f2%2^fr" $gridpower $mapscale
	] [ 1 ] [
		format "gridsize: ^fs^f2%1^fr worldsize: ^fs^f2%3^fr^ntexture slot ^fs^f2%4^fr : ^fs^f2%2^fr" $gridpower (gettexname (getseltex) 0) $mapscale (getseltex)
	]
]

VARoutlinestatus = 0

getsundir = [sunlightyaw (abs (getcamyaw)); sunlightpitch (abs (getcampitch))]
