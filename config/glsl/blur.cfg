////////////////////////////////////////////////
//
// separable blur with up to 7 taps
//
////////////////////////////////////////////////

blurshader = [
    shader 0 $arg1 [
        attribute vec4 vvertex;
        @(screentexcoord 0)
        uniform float offsets[8];
        varying vec2 texcoord0, texcoord1, texcoord2;
        @(loopconcat i (min (- $arg2 1) 2) [result [
            varying vec2 texcoord@(+ (* $i 2) 3), texcoord@(+ (* $i 2) 4);
        ]])
        void main(void)
        {
            gl_Position = vvertex;
            texcoord0 = vtexcoord0; 
            vec2 tc1 = vtexcoord0, tc2 = vtexcoord0; 
            tc1.@arg3 += offsets[1];
            tc2.@arg3 -= offsets[1];
            texcoord1 = tc1;
            texcoord2 = tc2;
            @(loopconcat i (min (- $arg2 1) 2) [result [
                tc1.@arg3 = vtexcoord0.@arg3 + offsets[@@(+ $i 2)];
                tc2.@arg3 = vtexcoord0.@arg3 - offsets[@@(+ $i 2)];
                texcoord@(+ (* $i 2) 3) = tc1;
                texcoord@(+ (* $i 2) 4) = tc2;
            ]])
        }
    ] [
        uniform float weights[8];
        uniform float offsets[8];
        uniform sampler@[arg4] tex0;
        varying vec2 texcoord0, texcoord1, texcoord2;
        @(loopconcat i (min (- $arg2 1) 2) [result [
            varying vec2 texcoord@(+ (* $i 2) 3), texcoord@(+ (* $i 2) 4);
        ]])
        fragdata(0, fragcolor, vec4)
        void main(void)
        {
            #define texval(coords) texture@[arg4](tex0, (coords))
            vec4 val = texval(texcoord0) * weights[0];
            @(loopconcat i $arg2 [
                if (< $i 3) [result [
                    val += weights[@@(+ $i 1)] * (texval(texcoord@(+ (* $i 2) 1)) + texval(texcoord@(+ (* $i 2) 2)));
                ]] [result [
                    val += weights[@@(+ $i 1)] * 
                    @(if (=s $arg3 "x") [result [
                        (texval(vec2(texcoord0.x + offsets[@@(+ $i 1)], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[@@(+ $i 1)], texcoord0.y)));
                    ]] [result [
                        (texval(vec2(texcoord0.x, texcoord0.y + offsets[@@(+ $i 1)])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[@@(+ $i 1)])));
                    ]])
                ]]
            ])
            fragcolor = val;
        }
    ]
]

loop+ i 1 7 [
    blurshader (format "blurx%1" $i) $i x 2D
    blurshader (format "blury%1" $i) $i y 2D
    blurshader (format "blurx%1rect" $i) $i x 2DRect
    blurshader (format "blury%1rect" $i) $i y 2DRect
]

